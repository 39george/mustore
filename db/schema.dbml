Enum "MusicKey" {
  "a_minor"
  "a_major"
  "b_flat_minor"
  "b_flat_major"
  "b_minor"
  "b_major"
  "c_minor"
  "c_major"
  "c_sharp_minor"
  "c_sharp_major"
  "d_minor"
  "d_major"
  "e_flat_minor"
  "e_flat_major"
  "e_minor"
  "e_major"
  "f_minor"
  "f_major"
  "f_sharp_minor"
  "f_sharp_major"
  "g_minor"
  "g_major"
  "a_flat_minor"
  "a_flat_major"
}

Enum "ProductStatus" {
  "moderation"
  "denied"
  "active"
  "hidden"
  "sold"
}

Enum "ServiceStatus" {
  "moderation"
  "denied"
  "active"
  "hidden"
}

Enum "OfferStatus" {
  "pending"
  "accepted"
}

Enum "ServiceOrderStatus" {
  "paid"
  "delivered"
  "on_revision"
  "dispute"
  "rejected"
  "fulfiled"
}

Enum "ProductOrderStatus" {
  "created"
  "paid"
}

Enum "ObectType" {
  "image"
  "audio"
  "multitrack"
  "video"
  "attachment"
}

Table genres {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  name VARCHAR(50) [not null, unique]
}

Ref:genres.id < songs.primary_genre [delete: restrict]
Ref:genres.id < songs.secondary_genre [delete: restrict]
Ref:genres.id < beats.primary_genre [delete: restrict]
Ref:genres.id < beats.secondary_genre [delete: restrict]
Ref:genres.id < music_services_genres.genres_id [delete: restrict]

Table tags {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  name VARCHAR(50) [not null, unique]
}

Ref:tags.id < products_tags.tags_id [delete: restrict]


Table user_settings {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  inbox_messages BOOL [not null, default: true]
  order_messages BOOL [not null, default: true]
  order_updates BOOL [not null, default: true]
}

Ref: user_settings.id < users.user_settings_id [delete: restrict]

Table users {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  user_settings_id INTEGER [not null]
  username VARCHAR(50) [not null, unique]
  bio VARCHAR(400)
  email VARCHAR(100) [not null, unique]
  password_hash VARCHAR(500) [not null]
  status VARCHAR(50)
  ban BOOL [not null, default: `FALSE`]
}

Ref:users.id < products.owner_id [delete: cascade]
Ref:users.id < consumer_reviews.consumer_id [delete: cascade]
Ref:users.id < likes.users_id [delete: cascade]
Ref:users.id < listenings.users_id [delete: cascade]
Ref:users.id < services.creator_id [delete: cascade]
Ref:users.id < views.users_id [delete: cascade]
Ref:users.id < favorites.users_id [delete: cascade]
Ref:users.id < product_orders.consumers_id [delete: set null]
Ref:users.id < service_orders.consumers_id [delete: set null]
Ref:users.id < transactions.users_id [delete: set null]
Ref:users.id < service_reviews.author_id [delete: set null]
Ref:users.id < messages.users_id [delete: set null]
Ref:users.id < participants.users_id [delete: cascade]
Ref:users.id < reports.users_id [delete: cascade]
Ref:users.id < system_notifications.users_id [delete: cascade]
Ref:users.id < support_tickets.users_id [delete: cascade]
Ref:users.id < objects.avatar_users_id [delete: restrict]
Ref:users.id < strikes.users_id [delete: cascade]
Ref:users.id < bans.users_id [delete: cascade]
Ref:users.id < admin_signup_tokens.users_id [delete: set null]
Ref:users.id < strikes.administrators_id [delete: set null]
Ref:users.id < bans.administrators_id [delete: set null]
Ref:users.id < users_groups.users_id [delete: cascade]

Table groups {
  id SERIAL [pk, increment]
  name VARCHAR(50) [not null, unique]
}

Ref:groups.id < users_groups.groups_id [delete: restrict]
Ref:groups.id < groups_permissions.groups_id [delete: cascade]

Table permissions {
  id SERIAL [pk, increment]
  name VARCHAR(50) [not null, unique]
}

Ref:permissions.id < groups_permissions.permissions_id [delete: cascade]

Table users_groups {
  users_id INTEGER [not null]
  groups_id INTEGER [not null]
}

Table groups_permissions {
  groups_id INTEGER [not null]
  permissions_id INTEGER [not null]
}

Table admin_signup_tokens {
    id SERIAL [pk, increment]
    token UUID [not null, unique]
    created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
    used BOOLEAN [not null, default: `FALSE`]
    users_id INTEGER
}

Table objects {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  key VARCHAR(500) [not null, unique]
  object_type "ObectType" [not null]
  avatar_users_id INTEGER [unique, default: `NULL`]
  cover_products_id INTEGER [unique, default: `NULL`]
  master_songs_id INTEGER [unique, default: `NULL`]
  multitrack_songs_id INTEGER [unique, default: `NULL`]
  master_beats_id INTEGER [unique, default: `NULL`]
  multitrack_beats_id INTEGER [unique, default: `NULL`]
  cover_services_id INTEGER [unique, default: `NULL`]
  video_description_services_id INTEGER [unique, default: `NULL`]
  mixing_credits_mixing_id INTEGER  [default: `NULL`]
  song_credits_songs_id INTEGER [default: `NULL`]
  beat_credits_beat_writing_id INTEGER [default: `NULL`]
  cover_credits_cover_design_id INTEGER [default: `NULL`]
  message_attachment INTEGER [default: `NULL`]
}

Ref:objects.id < images.objects_id[delete: cascade]

Table images {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  objects_id INTEGER [not null]
  scale REAL 
  offset_x REAL
  offset_y REAL
}

Table products {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  owner_id INTEGER [not null]
  name VARCHAR(30) [not null]
  description VARCHAR(400)
  price NUMERIC(10,2) [not null]
  status ProductStatus [not null]
}

Ref:products.id < products_tags.products_id [delete: cascade]
Ref:products.id < songs.products_id [delete: cascade]
Ref:products.id < beats.products_id [delete: cascade]
Ref:products.id < lyrics.products_id [delete: cascade]
Ref:products.id < covers.products_id [delete: cascade]
Ref:products.id < product_orders.products_id [delete: set null]
Ref:products.id < reports.products_id [delete: cascade]
Ref:products.id < objects.cover_products_id [delete: restrict]

Table products_tags {
  products_id INTEGER [not null]
  tags_id INTEGER [not null]
  Indexes {
    (products_id, tags_id) [pk, name: "pk_products_id"]
  }
}

Table songs {
  id SERIAL [pk, increment]
  products_id INTEGER [not null]
  primary_genre INTEGER [not null]
  secondary_genre INTEGER
  sex VARCHAR (6) [not null]
  tempo SMALLINT [not null]
  key MusicKey [not null]
  duration REAL [not null]
  lyric VARCHAR(1000) [not null]
}

Ref:songs.id < likes.songs_id [delete: cascade]
Ref:songs.id < listenings.songs_id [delete: cascade]
Ref:songs.id < views.songs_id [delete: cascade]
Ref:songs.id < objects.master_songs_id [delete: cascade]
Ref:songs.id < objects.multitrack_songs_id [delete: cascade]

Table beats {
  id SERIAL [pk, increment]
  products_id INTEGER [not null]
  primary_genre INTEGER [not null]
  secondary_genre INTEGER
  tempo SMALLINT [not null]
  key MusicKey [not null]
  duration REAL [not null]
}

Ref:beats.id < likes.beats_id [delete: cascade]
Ref:beats.id < listenings.beats_id [delete: cascade]
Ref:beats.id < views.beats_id [delete: cascade]
Ref:beats.id < objects.master_beats_id [delete: restrict]
Ref:beats.id < objects.multitrack_beats_id [delete: restrict]

Table lyrics {
  id SERIAL [pk, increment]
  products_id INTEGER [not null]
  text VARCHAR(5000) [not null]
}

Ref:lyrics.id < likes.lyrics_id [delete: cascade]
Ref:lyrics.id < views.lyrics_id [delete: cascade]

Table covers {
  id SERIAL [pk, increment]
  products_id INTEGER [not null]
}

Ref:covers.id < likes.covers_id [delete: cascade]
Ref:covers.id < views.covers_id [delete: cascade]

Table likes {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  users_id INTEGER [not null]
  songs_id INTEGER [default: `NULL`]
  beats_id INTEGER [default: `NULL`]
  lyrics_id INTEGER [default: `NULL`]
  covers_id INTEGER [default: `NULL`]
}

Table listenings {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  users_id INTEGER [not null]
  songs_id INTEGER [default: `NULL`]
  beats_id INTEGER [default: `NULL`]
}

Table services {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  creator_id INTEGER [not null]
  name VARCHAR(30) [not null]
  description VARCHAR(400)
  display_price NUMERIC(10,2) [not null]
  status ServiceStatus [not null, default: "active"]
}

Ref:services.id < mixing.services_id [delete: cascade]
Ref:services.id < service_orders.services_id [delete: set null]
Ref:services.id < song_writing.services_id [delete: cascade]
Ref:services.id < beat_writing.services_id [delete: cascade]
Ref:services.id < ghost_writing.services_id [delete: cascade]
Ref:services.id < cover_design.services_id [delete: cascade]
Ref:services.id < views.services_id [delete: cascade]
Ref:services.id < favorites.services_id [delete: cascade]
Ref:services.id < reports.services_id [delete: cascade]
Ref:services.id < objects.cover_services_id [delete: restrict]
Ref:services.id < objects.video_description_services_id [delete: restrict]
Ref:services.id < offers.services_id [delete: cascade]

Table mixing {
  id SERIAL [pk, increment]
  services_id INTEGER [not null]
}

Ref:mixing.id < music_services_genres.mixing_id [delete: cascade]
Ref:mixing.id < objects.mixing_credits_mixing_id [delete: restrict]

Table song_writing {
  id SERIAL [pk, increment]
  services_id INTEGER [not null]
}

Ref:song_writing.id < music_services_genres.song_writing_id [delete: cascade]
Ref:song_writing.id < objects.song_credits_songs_id [delete: restrict]

Table beat_writing {
  id SERIAL [pk, increment]
  services_id INTEGER [not null]
}

Ref:beat_writing.id < music_services_genres.beat_writing_id [delete: cascade]
Ref:beat_writing.id < objects.beat_credits_beat_writing_id [delete: restrict]

Table ghost_writing {
  id SERIAL [pk, increment]
  services_id INTEGER [not null]
}

Table cover_design {
  id SERIAL [pk, increment]
  services_id INTEGER [not null]
}

Ref:cover_design.id < objects.cover_credits_cover_design_id [delete: restrict]

Table music_services_genres {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  genres_id INTEGER [not null]
  beat_writing_id INTEGER [default: `NULL`]
  song_writing_id INTEGER [default: `NULL`]
  mixing_id INTEGER [default: `NULL`]
}

Table favorites {
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  users_id INTEGER
  services_id INTEGER
  Indexes {
    (users_id, services_id) [pk, name: "pk_favorites"]
  }
}

Table product_orders {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  consumers_id INTEGER
  products_id INTEGER
  name VARCHAR(30) [not null]
  price NUMERIC(10, 2) [not null]
  status ProductOrderStatus [not null, default: "created"]
}

Ref:product_orders.id < transactions.product_orders_id [delete: restrict]

Table service_orders {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  consumers_id INTEGER
  services_id INTEGER
  conversations_id INTEGER [not null]
  delivery_date TIMESTAMP [not null]
  revisions INTEGER [not null]
  revision_price NUMERIC(10, 2) [not null]
  name VARCHAR(30) [not null]
  price NUMERIC(10, 2) [not null]
  status OrderStatus [not null, default: "paid"]
  delivered_on_time BOOL
}

Ref:service_orders.id < messages.service_orders_id [delete: cascade]
Ref:service_orders.id < participants.service_orders_id [delete: cascade]
Ref:service_orders.id < transactions.service_orders_id [delete: restrict]
Ref:service_orders.id < service_reviews.service_orders_id [delete: cascade]
Ref:service_orders.id < consumer_reviews.service_orders_id [delete: restrict]


// Ref:product_orders.id < transactions.orders_id [delete: restrict]

Table transactions {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  users_id INTEGER
  product_orders_id INTEGER [default: `NULL`]
  service_orders_id INTEGER [default: `NULL`]
  description VARCHAR(200) [not null]
  from_desc VARCHAR(200) [not null]
  for_desc VARCHAR(200) [not null]
  money_amount NUMERIC(10,2) [not null]
}

Table service_reviews {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  author_id INTEGER
  service_orders_id INTEGER [not null]
  text VARCHAR(400) [not null]
  mark SMALLINT [not null]
}

Table consumer_reviews {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  author_id INTEGER
  consumer_id INTEGER
  service_orders_id INTEGER [not null]
  text VARCHAR(400) [not null]
  mark SMALLINT [not null]
}

Table conversations {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
}

Ref:conversations.id < messages.conversations_id [delete: cascade]
Ref:conversations.id < participants.conversations_id [delete: cascade]
Ref:conversations.id < service_orders.conversations_id [delete: cascade]
Ref:conversations.id < offers.conversations_id [delete: cascade]

Table messages {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  conversations_id INTEGER [default: `NULL`]
  service_orders_id INTEGER [default: `NULL`]
  users_id INTEGER
  messages_id INTEGER
  text VARCHAR(2500) [not null]
}

Ref:messages.id < views.messages_id [delete: cascade]
Ref:messages.id < reports.messages_id [delete: cascade]
Ref:messages.id < objects.message_attachment [delete: restrict]

Table participants {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  conversations_id INTEGER [default: `NULL`]
  service_orders_id INTEGER [default: `NULL`]
  users_id INTEGER
}

Table offers {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  conversations_id INTEGER [not null]
  services_id INTEGER [not null]
  price NUMERIC(10,2) [not null]
  delivery_date TIMESTAMP [not null]
  free_revisions INTEGER [not null]
  revision_price NUMERIC(10,2) [not null]
  status OfferStatus [not null]
}

Table system_notifications {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  users_id INTEGER [not null]
  text VARCHAR(2500) [not null]
}

Ref: system_notifications.id < views.system_notifications_id [delete: cascade]


Table views {
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  users_id INTEGER [not null]
  services_id INTEGER [default: `NULL`]
  songs_id INTEGER [default: `NULL`]
  beats_id INTEGER [default: `NULL`]
  lyrics_id INTEGER [default: `NULL`]
  covers_id INTEGER [default: `NULL`]
  messages_id INTEGER [default: `NULL`]
  system_notifications_id INTEGER [default: `NULL`]
}

Table reports {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  users_id INTEGER [not null]
  messages_id INTEGER [default: `NULL`]
  services_id INTEGER [default: `NULL`]
  products_id INTEGER [default: `NULL`]
  is_open BOOL [not null, default: true]
}

Table support_tickets {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  users_id INTEGER [not null]
  text VARCHAR(2500) [not null]
  is_open BOOL [not null, default: true]
  attachments "VARCHAR(1000)[]" 
}

Table strikes {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  updated_at TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  users_id INTEGER [not null]
  administrators_id INTEGER 
  comment VARCHAR(1000) [not null]
}

Table bans {
  id SERIAL [pk, increment]
  created_at TIMESTAMP [not null, default: `CURRENT_TIMESTAMP`]
  duration INTERVAL [not null]
  users_id INTEGER [not null]
  administrators_id INTEGER 
  comment VARCHAR(1000) [not null]
}
